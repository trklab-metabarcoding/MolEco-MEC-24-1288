{
  "hash": "74b46908a6c1bff50c72ab30b9bb9615",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Coverage by country\"\nformat: html\n---\n\n\n\n\nThis notebook analyzes the counts of barcodes by country and plots the results.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## First check for the required packages, install if needed, and load the libraries.\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"sangerseqR\")\nremotes::install_github(\"ropensci/bold\")\nremotes::install_github(\"ropensci/taxize\")\n\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(maps, ggplot2, dplyr, countrycode, rgbif, data.table, raster, mapproj, sf)\n```\n:::\n\n\n\n\n# SI Figure S1: Map of country counts\n\nStart with some data cleaning.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombtab <- read.csv(\"../data/BoldPhyla_to_Families_combtab_v4.csv\")\nhead(combtab, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  X.1 X   processid               institution_storing phylum_taxID\n1   1 1   API120-12 Sri Ramaswamy Memorial University           12\n2   2 2 CANGI002-17      Museu Paraense Emilio Goeldi           12\n    phylum_name class_taxID    class_name order_taxID order_name family_taxID\n1 Magnoliophyta          41 Magnoliopsida      121216   Lamiales       148533\n2 Magnoliophyta          41 Magnoliopsida      121216   Lamiales       148533\n  family_name subfamily_taxID subfamily_name genus_taxID  genus_name\n1 Acanthaceae              NA                     415894 Peristrophe\n2 Acanthaceae          264310   Acanthoideae      148534     Ruellia\n  species_taxID             species_name subspecies_taxID subspecies_name\n1        494465 Peristrophe bicalyculata               NA                \n2        632816          Ruellia inflata               NA                \n  collectiondate_start collectiondate_end lat lon coord_source coord_accuracy\n1                   NA                 NA  NA  NA                          NA\n2                   NA                 NA  NA  NA                          NA\n  elev country province_state region sector exactsite rbcL matK trnL ITS2\n1   NA                                                rbcL               \n2   NA  Brazil           Para                         rbcL matK       ITS\n           multi gb_rbcL gb_matK gb_trnL gb_ITS\n1        rbcL---                               \n2 rbcL-matK--ITS                               \n```\n\n\n:::\n\n```{.r .cell-code}\n# Round coordiantes to nearest 1 degree\ncombtab$lat <- as.numeric(as.character(combtab$lat))\ncombtab$lon <- as.numeric(as.character(combtab$lon))\n\n# ggplot wrapper of map()\nworld_map <- map_data(\"world\") \n\n# Build a dataframe / matrix of country counts to plot\nmyCodes <- data.frame(table(combtab$country))\ncolnames(myCodes)<-c(\"country\", \"n\")\n\n# Convert country names to \"Getty Thesaurus\" names for BOLD\nmyCodes$country <- countrycode(myCodes$country, \"country.name\", \"country.name\") \nmyCodes$country[which(myCodes$country==\"United States\")]<-\"USA\"\nmyCodes$country[which(myCodes$country==\"United Kingdom\")]<-\"UK\"\nmyCodes$country[which(myCodes$country==\"Congo - Kinshasa\")]<-\"Democratic Republic of the Congo\"\nmyCodes$country[which(myCodes$country==\"Congo - Brazzaville\")]<-\"Republic of Congo\"\nmyCodes$country[which(myCodes$country==\"British Virgin Islands\")]<-\"Virgin Islands\"\nmyCodes$country[which(myCodes$country==\"Bosnia & Herzegovina\")]<-\"Bosnia and Herzegovina\"\nmyCodes$country[which(myCodes$country==\"São Tomé & Príncipe\")]<-\"Sao Tome and Principe\"\nmyCodes$country[which(myCodes$country==\"Trinidad & Tobago\")]<-\"Trinidad\" #Tobago is a separate entity in maps\nmyCodes$country[which(myCodes$country==\"North Macedonia\")]<-\"Macedonia\" \nmyCodes$country[which(myCodes$country==\"Myanmar (Burma)\")]<-\"Myanmar\" \nmyCodes$country[which(myCodes$country==\"Côte d’Ivoire\")]<-\"Ivory Coast\" \nmyCodes$country[which(myCodes$country==\"Czechia\")]<-\"Czech Republic\" \nmyCodes$country[which(myCodes$country==\"Réunion\")]<-\"Reunion\" \nmyCodes$country[which(myCodes$country==\"St. Helena\")]<-\"Saint Helena\" \nmyCodes$country[which(myCodes$country==\"Eswatini\")]<-\"Swaziland\" \n```\n:::\n\n\n\n\n#### Map country-level barcode intensity.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Map for country-level intensity\nmyCodes <- myCodes[is.na(myCodes$country)==F,]\n\nggpoliticalboundaries <- ggplot(myCodes) + \n  geom_map(dat = world_map, map = world_map, aes(map_id = region), fill = \"white\", color = \"#7f7f7f\", linewidth = 0.25)  +\n  geom_map(map = world_map, aes(map_id = country, fill = n), linewidth = 0.25) +\n  scale_fill_gradient(low = \"#fff7bc\", high = \"#cc4c02\", name = \"Worldwide specimens\") + scale_x_continuous(breaks = seq(-180, 180, by = 60)) +\n  scale_y_continuous(breaks = seq(-90, 90, by = 45)) +\n  expand_limits(x = world_map$long, y = world_map$lat) + \n  theme_classic() + \n  ylab(\"\") + \n  xlab(\"\") + \n  theme(legend.position = \"none\") +\n  geom_hline(yintercept = 0, color = \"black\", linewidth = 0.5) + \n  geom_hline(yintercept = 23.5, color = \"black\", linetype = \"dashed\") + \n  geom_hline(yintercept = -23.5, color = \"black\", linetype = \"dashed\") \nggpoliticalboundaries\n```\n\n::: {.cell-output-display}\n![](geocov_figs2_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(\"ggpoliticalboundaries_20240626_1.pdf\", ggpoliticalboundaries, width = 13, height = 8.6, units = \"cm\")\n```\n:::\n\n\n\n\n#### Distribution of country bias - lineplot.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Line plot with country counts\ncountrycounts_line <- ggplot(myCodes, aes(x = reorder(country, -n), y = n, group = 1)) +\n  geom_line() + \n  theme_classic() + \n  xlab(\"\") + \n  ylab(\"\") +  \n  theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())\ncountrycounts_line\n```\n\n::: {.cell-output-display}\n![](geocov_figs2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(\"countrycounts_20240626.pdf\", countrycounts, width = 8, height = 4, units = \"cm\")\n```\n:::\n\n\n\n\n#### Print dataframe with countries having less than 10 barcodes.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize number of countries with <10 \nmyCodes_less_than_10 <- subset(myCodes, n <10) %>%\n  arrange(desc(n))\nmyCodes_less_than_10\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                  country n\n1                              Cape Verde 9\n2                                 Eritrea 9\n3                            Sierra Leone 9\n4                                Trinidad 9\n5                                    Guam 8\n6                                 Mayotte 8\n7  South Georgia & South Sandwich Islands 8\n8                          Virgin Islands 7\n9                        Falkland Islands 7\n10                            North Korea 7\n11                           Cook Islands 6\n12                   United Arab Emirates 6\n13                                 Kosovo 5\n14                                Belarus 4\n15                                   Chad 4\n16                          Guinea-Bissau 4\n17                                 Kuwait 4\n18                                  Palau 4\n19                                Bermuda 3\n20                          Faroe Islands 3\n21                           Saint Helena 3\n22                                  Tonga 3\n23                               Djibouti 2\n24                                 Gambia 2\n25                                Grenada 2\n26                              Lithuania 2\n27                               Maldives 2\n28                                  Niger 2\n29               Northern Mariana Islands 2\n30                              St. Lucia 2\n31                             San Marino 2\n32                      Antigua & Barbuda 1\n33                                  Aruba 1\n34                             Mauritania 1\n35                                Moldova 1\n36                                   Niue 1\n37               St. Vincent & Grenadines 1\n38                            South Sudan 1\n```\n\n\n:::\n:::\n",
    "supporting": [
      "geocov_figs2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}